#include <bits/stdc++.h> 
int solve(int m, int n,int row,int col,vector<vector<int>>&dp)
{
    //base case
    if(row==m-1 and col==n-1)
        return 1;
    if(row>=m or col>=n)
        return 0;
 
    // recursive call for down
    // recursive call for right
    
//     return solve(m,n,row+1,col) + solve(m,n,row,col+1);
    if(dp[row][col]!=-1)
        return dp[row][col];
    else
    return dp[row][col] = solve(m,n,row+1,col,dp) + solve(m,n,row,col+1,dp);
}
int uniquePaths(int m, int n) {
	// Write your code here.
    int row = 0;
    int col = 0;
    vector<vector<int>> dp(m,vector<int>(n,-1));
    return solve(m,n,row,col,dp);
}
